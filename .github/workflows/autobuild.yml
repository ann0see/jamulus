on:
  push:
    tags:
      - "r*"
    branches:
      - "autobuild*"
  workflow_dispatch:
name:                               Publish Release
jobs:
  create_release:
     name:                          Create release
     runs-on:                       ubuntu-latest
     outputs:
      upload_url:                   ${{ steps.create_release.outputs.upload_url }}
      upload_latest_url:            ${{ steps.create_latest_release.outputs.upload_url }}
      version:                      ${{ steps.jamulus-build-vars.outputs.JAMULUS_VERSION }}
     steps:
         - name:                    Checkout code
           uses:                    actions/checkout@v2
         - name:                    Get Jamulus build info
           run:                     sh ${{ github.workspace }}/.github/actions_scripts/get_release_vars.sh ${{ github.workspace }}
           id:                      jamulus-build-vars
         - name:                    Remove tag "latest"
           continue-on-error:       true
           uses:                    dev-drprasad/delete-tag-and-release@v0.1.2
           with:
             delete_release:        true
             tag_name:              latest # tag name to delete
           env:
             GITHUB_TOKEN:          ${{ secrets.GITHUB_TOKEN }}
         - name:                    Prepare latest release
           id:                      create_latest_release
           uses:                    actions/create-release@v1
           env:
             GITHUB_TOKEN:          ${{ secrets.GITHUB_TOKEN }}
           with:
             tag_name:              latest
             release_name:          Latest release ${{ steps.jamulus-build-vars.outputs.JAMULUS_VERSION }} (auto build)
             body_path:             ${{ github.workspace }}/autoLatestChangelog.md
             draft:                 false
             prerelease:            false
         - name:                    Prepare tag release
           id:                      create_release
           uses:                    actions/create-release@v1
           env:
             GITHUB_TOKEN:          ${{ secrets.GITHUB_TOKEN }}
           with:
             tag_name:              ${{ github.ref }}
             #${{ steps.jamulus-build-vars.outputs.PUSH_TAG }}
             release_name:          Release ${{ steps.jamulus-build-vars.outputs.JAMULUS_VERSION }} (auto build)
             body_path:             ${{ github.workspace }}/autoLatestChangelog.md
             draft:                 false
             prerelease:            false
  release_assets:
    name:                           Release assets for ${{ matrix.config.config_name }}
    needs:                          create_release
    runs-on:                        ${{ matrix.config.building_on_os }}
    strategy:
      matrix:
        config:
           - config_name:           Linux (normal)
             target_os:             linux
             building_on_os:        ubuntu-18.04
             asset_path:            deploy/Jamulus_amd64.deb
             asset_name:            jamulus_${{ needs.create_release.outputs.version }}_ubuntu_amd64.deb
             asset_latest_name:     jamulus_latest_ubuntu_amd64.deb
           - config_name:           Linux (headless)
             target_os:             linux
             building_on_os:        ubuntu-18.04
             asset_path:            deploy/Jamulus_headless_amd64.deb
             asset_name:            jamulus_headless_${{ needs.create_release.outputs.version }}_ubuntu_amd64.deb
             asset_latest_name:     jamulus_headless_ubuntu_amd64.deb
           - config_name:           MacOS
             target_os:             macos
             building_on_os:        macos-10.15
             asset_path:            deploy/Jamulus-installer-mac.dmg
             asset_name:            jamulus_${{ needs.create_release.outputs.version }}_mac.dmg
             asset_latest_name:     jamulus_latest_mac.dmg
           #- config_name:          Windows
           #  target_os:            windows
           #  building_on_os:       windows-latest
           #  asset_path:           ${{ github.workspace }}\deploy\Jamulus-installer-win.exe
           #  asset_latest_name:    jamulus_latest_win.exe
           #  asset_name:           jamulus_${{ needs.create_release.outputs.upload_url }}_win.exe
           - config_name:           AndroidAPK
             target_os:             android
             building_on_os:        ubuntu-18.04
             asset_path:            android-build/build/outputs/apk/debug/android-build-debug.apk
             asset_name:            jamulus_${{ needs.create_release.outputs.version }}_android.apk
             asset_latest_name:     jamulus_latest_android.apk
    steps:
      # Checkout code
      - name:                       Checkout code
        uses:                       actions/checkout@v2
        
      # Install QT for windows (part of scripts in other os)
      - name:                       Install Qt (64 Bit)
        uses:                       jurplel/install-qt-action@v2
        if:                         matrix.config.building_on_os == 'windows-latest'
        with:
          version:                  '5.15.2'
          dir:                      '${{ github.workspace }}'
          arch:                     'win64_msvc2019_64'
      - name:                       Install Qt (32 Bit)
        uses:                       jurplel/install-qt-action@v2
        if:                         matrix.config.building_on_os == 'windows-latest'
        with:
          version:                  '5.15.2'
          dir:                      '${{ github.workspace }}'
          arch:                     'win32_msvc2019'
        
      # Build
      - name:                       "Build deb (Linux)"
        run:                        sh linux/autorelease_linux.sh ${{ github.workspace }}
        if:                         matrix.config.target_os == 'linux'
      - name:                       "Build (Windows)"
        run:                        powershell .\windows\deploy_windows.ps1 ${{ github.workspace }}\Qt\5.15.2\; cp deploy\Jamulus*installer-win.exe deploy\Jamulus-installer-win.exe
        if:                         matrix.config.target_os == 'windows'
      - name:                       "Build (macOS)"
        run:                        sh mac/autorelease_mac.sh ${{ github.workspace }}
        if:                         matrix.config.target_os == 'macos'
      - name: Hello world action step
        uses: ./distribute_android/ # Uses an action in the directory
        if:                         matrix.config.target_os == 'android'
        
      # Upload tag
      - name:                       Upload Release Asset - Tag
        id:                         upload-release-asset
        uses:                       actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN:             ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:               ${{ needs.create_release.outputs.upload_url }} # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path:               ${{ matrix.config.asset_path }}
          asset_name:               ${{ matrix.config.asset_name }}
          asset_content_type:       application/octet-stream
          
      # Upload latest
      - name:                       Upload Release Asset - 1
        id:                         upload-latest-release-asset
        uses:                       actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN:             ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:               ${{ needs.create_release.outputs.upload_latest_url }} # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path:               ${{ matrix.config.asset_path }}
          asset_name:               ${{ matrix.config.asset_latest_name }}
          asset_content_type:       application/octet-stream

